body, html {
  height: 100%;
  margin: 0;
  font-family: Impact;
}

.hero-image {
    /* - HERO -
    This code controls your "hero image." You will need to change hero.jpg to match your asset */
    background-image: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("hero.JPEG");
    height: 100%;
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    position: relative;
}

/* Places text in the middle of the image */
.hero-text {
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 250%;
}

.hero-text h2 {
    /* This section adds the text stylings for your hero block */
    display: block;
    font-size: 0.67em;
    margin-block-start: 2.33em;
    margin-block-end: 2.33em;
    margin-inline-start: 0px;
    margin-inline-end: 0px;
    font-weight: bold;
  }

.textblock {
    padding-top: 100px;
    padding-bottom: 100px;
    padding-left: 100px;
    padding-right: 100px;

  }


.blockquote {
    background-color: #;
    border-top: 3px solid #000;
    border-bottom: 3px solid #000;
    padding-left: 20px;
    padding-right: 20px;
    margin: 10%;
}

/* Change your button colors and other attributes here. */
.buttonbox {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 200px;
    border: 0px solid #;
}

.button {
    background-color: #2A5DB0;
    border: none;
    color: white;
    padding: 15px 32px;
    text-align: center;
    display: inline-block;
    font-size: 16px;
    cursor: pointer;
}

.button:hover {
    background-color: #4682B4;
}

/* Change unordered list from disc (default) to circle, square, or none. */
.ul {
    list-style-type: disc;
    font-size: 20pt;
    padding: 20px;
}

/* Change orderd list from upper-roman to lower-alpha. */
.ol {
    list-style-type: upper-roman;
    font-size: 20pt;
    padding: 20px;
}

/* Learn other list conventions: https://www.w3schools.com/cssref/pr_list-style-type.asp */

.video {
    text-align: center;
}

.video-container {
  	position:relative;
  	padding-bottom:56.25%;
  	padding-top:30px;
  	height:0;
  	overflow:hidden;
    text-align: center;
  }

.video-container iframe, .video-container object, .video-container embed {
  	position:absolute;
  	top:0;
  	left:0;
  	width:100%;
  	height:100%;
  }


/* Preset Image Controls

This section of CSS helps organize images to position and center the image to scale nicely on all screens */

.center-img {
  display: block;
  margin-left: auto;
  margin-right: auto;
}

.imgageblock {
      display: block;
      margin-left: auto;
      margin-right: auto;
      padding-top: 100px;
      padding-bottom: 100px;
  }


/*  - PARALLAX -
This code controls that cool parallax image and scrolling effect. Change the image "fuego.jpg" below to match your asset.*/


.parallax {
    background-image: url("parallax.jpg");

    /* Set a specific height */
    height: 500px;

    /* control the parallax scrolling effect */
    background-attachment: fixed;
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    padding-top: 100px;
    padding-bottom: 100px;

}


/* This code stops the parallax image and scrolling effect for small screens--at the moment, iPhones just don't it.*/
@media screen and (max-width: 768px) {
	.parallax {
		background-attachment: inherit;
    height: 100px;
	}
}


/* -Preset Photo Grid -

The following CSS is responsible for your photo grid .row, .column, .column img and @ media all work together to create your responsive image displays. Change the images on index.html.*/

.photogrid {
   text-align: center;
   padding-top: 100px;
   padding-bottom: 100px;
}

.row {
    display: flex;
    flex-wrap: wrap;
    padding: 0 4px;
    justify-content: center;
}

/* Create 3 equal columns that sit next to each other */
.column {
    flex: 25%;
    max-width: 25%;
    padding: 0 4px;
}

.column img {
    margin-top: 8px;
    vertical-align: middle;
    width: 100%;
}
.glitch-wrapper {
 width: 100%;
 height: 100%;
 display: flex;
 align-items: center;
 justify-content: center;
 text-align: center;
 background-color: rgba(255, 255, 255, 0);
}

.glitch {
 position: relative;
 font-size: 80px;
 font-weight: 700;
 line-height: 1.2;
 color: #ffffff;
 letter-spacing: 5px;
 animation: shift 4s ease-in-out infinite alternate;
 z-index: 1;
}

.glitch:before {
 content: attr(data-glitch);
 position: absolute;
 top: 0;
 left: -2px;
 text-shadow: -1px 0 #ff4000;
 width: 100%;
 color: #030303;
 background-color: rgba(255, 255, 255, 0);
 overflow: hidden;
 clip: rect(0, 900px, 0, 0);
 animation: noise-before 3s infinite linear alternate-reverse;
}

.glitch:after {
 content: attr(data-glitch);
 position: absolute;
 top: 0;
 left: 2px;
 text-shadow: 1px 0 #00ff1d;
 width: 100%;
 color: #030303;
 background-color: rgba(255, 255, 255, 0);
 overflow: hidden;
 clip: rect(0, 900px, 0, 0);
 animation: noise-after 2s infinite linear alternate-reverse;
}

@keyframes noise-before {
 0% {
    clip: rect(61px, 9999px, 52px, 0);
 }

 5% {
    clip: rect(33px, 9999px, 144px, 0);
 }

 10% {
    clip: rect(121px, 9999px, 115px, 0);
 }

 15% {
    clip: rect(144px, 9999px, 162px, 0);
 }

 20% {
    clip: rect(62px, 9999px, 180px, 0);
 }

 25% {
    clip: rect(34px, 9999px, 42px, 0);
 }

 30% {
    clip: rect(147px, 9999px, 179px, 0);
 }

 35% {
    clip: rect(99px, 9999px, 63px, 0);
 }

 40% {
    clip: rect(188px, 9999px, 122px, 0);
 }

 45% {
    clip: rect(154px, 9999px, 14px, 0);
 }

 50% {
    clip: rect(63px, 9999px, 37px, 0);
 }

 55% {
    clip: rect(161px, 9999px, 147px, 0);
 }

 60% {
    clip: rect(109px, 9999px, 175px, 0);
 }

 65% {
    clip: rect(157px, 9999px, 88px, 0);
 }

 70% {
    clip: rect(173px, 9999px, 131px, 0);
 }

 75% {
    clip: rect(62px, 9999px, 70px, 0);
 }

 80% {
    clip: rect(24px, 9999px, 153px, 0);
 }

 85% {
    clip: rect(138px, 9999px, 40px, 0);
 }

 90% {
    clip: rect(79px, 9999px, 136px, 0);
 }

 95% {
    clip: rect(25px, 9999px, 34px, 0);
 }

 100% {
    clip: rect(173px, 9999px, 166px, 0);
 }
}

@keyframes noise-after {
 0% {
    clip: rect(26px, 9999px, 33px, 0);
 }

 5% {
    clip: rect(140px, 9999px, 198px, 0);
 }

 10% {
    clip: rect(184px, 9999px, 89px, 0);
 }

 15% {
    clip: rect(121px, 9999px, 6px, 0);
 }

 20% {
    clip: rect(181px, 9999px, 99px, 0);
 }

 25% {
    clip: rect(154px, 9999px, 133px, 0);
 }

 30% {
    clip: rect(134px, 9999px, 169px, 0);
 }

 35% {
    clip: rect(26px, 9999px, 187px, 0);
 }

 40% {
    clip: rect(147px, 9999px, 137px, 0);
 }

 45% {
    clip: rect(31px, 9999px, 52px, 0);
 }

 50% {
    clip: rect(191px, 9999px, 109px, 0);
 }

 55% {
    clip: rect(74px, 9999px, 54px, 0);
 }

 60% {
    clip: rect(145px, 9999px, 75px, 0);
 }

 65% {
    clip: rect(153px, 9999px, 198px, 0);
 }

 70% {
    clip: rect(99px, 9999px, 136px, 0);
 }

 75% {
    clip: rect(118px, 9999px, 192px, 0);
 }

 80% {
    clip: rect(1px, 9999px, 83px, 0);
 }

 85% {
    clip: rect(145px, 9999px, 98px, 0);
 }

 90% {
    clip: rect(121px, 9999px, 154px, 0);
 }

 95% {
    clip: rect(156px, 9999px, 44px, 0);
 }

 100% {
    clip: rect(67px, 9999px, 122px, 0);
 }
}

@keyframes shift {
 0%, 40%, 44%, 58%, 61%, 65%, 69%, 73%, 100% {
    transform: skewX(0deg);
 }

 41% {
    transform: skewX(10deg);
 }

 42% {
    transform: skewX(-10deg);
 }

 59% {
    transform: skewX(40deg) skewY(10deg);
 }

 60% {
    transform: skewX(-40deg) skewY(-10deg);
 }

 63% {
    transform: skewX(10deg) skewY(-5deg);
 }

 70% {
    transform: skewX(-50deg) skewY(-20deg);
 }

 71% {
    transform: skewX(10deg) skewY(-10deg);
 }
}
.glitch-wrapperr {
   width: 100%;
   height: 100%;
   display: flex;
   align-items: center;
   justify-content: center;
   text-align: center;
   background-color: rgba(33, 33, 33, 0);
}

.glitchh {
   position: relative;
   font-size: 80px;
   font-weight: 700;
   line-height: 1.2;
   color: #fff;
   letter-spacing: 5px;
   z-index: 1;
}

.glitchh:before,
.glitchh:after {
   display: block;
   content: attr(data-glitch);
   position: absolute;
   top: 0;
   left: 0;
   opacity: 0.8;
}

.glitchh:before {
   animation: glitch-color 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) both infinite;
   color: #7d0000;
   z-index: -1;
}

.glitchh:after {
   animation: glitch-color 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94) reverse both infinite;
   color: #000000;
   z-index: -2;
}

@keyframes glitch-color {
   0% {
      transform: translate(0);
   }

   20% {
      transform: translate(-3px, 3px);
   }

   40% {
      transform: translate(-3px, -3px);
   }

   60% {
      transform: translate(3px, 3px);
   }

   80% {
      transform: translate(3px, -3px);
   }

   to {
      transform: translate(0);
   }
}

/* Responsive layout - makes grid a one column-layout instead of two or three columns */
@media screen and (max-width: 800px) {
    .column {
        flex: 75%;
        max-width: 75%;
    }
}
/* - Preset Text Block Controls-
this CSS element centers text elements*/


/* This CSS section controls the paragraph, video blocks*/
@media screen and (min-width: 800px) {
    .textblock, .video {
        margin: auto;
        width: 50%;
        padding: 100px;
        font-size: 125%;
    }
}

@media screen and (max-width: 800px) {
    .textblock, .video {
        margin: auto;
        padding-left: 20px;
        padding-right: 20px;
        padding-top: 100px;
        padding-bottom: : 1000px;
    }
}


#logo {
    padding-top: 100px;
    padding-bottom: 100px;
    padding-left: 20px;
    padding-right: 20px;
    font-size: 12pt;
    text-align: center;
  }

#footer {
        text-align: center;
    }
